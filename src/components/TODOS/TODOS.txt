 
// ********************           TODO          add a priority to each TODO down bellow and sort them by priority.


// TODO: Add a LICENCE file.
// TODO: Start using git branches when working on a separate features
// TODO: Start using git tags (semantic versionning)
// TODO: git stash
// TODO: remove old junk commits, first commit should be the one where the code is clean enough (most junk removed)
// TODO: use propTypes or start using using typescript in all components.
// TODO: transitions effects when showing or hiding MainCard or NewCardForm;

// TODO: Don't use any other colors, use only COLORS, 
// TODO: Remove all colors from the css file and set colors inside components
// TODO: change the fonts(esp. font-family & font-weight), current ones are body;

// TODO: Allow users to change the style of cards (priority-1: bg color, priority-2: text color, priority-3: allow them to resize the front, back and also resize the text and math content.) like notes apps which allow change of note theme (yellow bg, cool image bg (nature, ...), card border shadows (enable or disable) ...)

// TODO: main/ folder should only contain <main></main> elements (semantic <main> tag)

// TODO: use React-Quill to set text for in CardForm.js 
// TODO: check if there are alternatives that are better than React-Quill.
// TODO: create a folder named header/ inside src/ & create components HeaderLeft.js HeaderMiddle.js HeaderRight.js - because the header.js has become a bit complex. 
// TODO: find where hooks (useMemo, useCallback, useReducer, custom hooks) can be leveraged to improve performance and make the code cleaner.
// TODO: make cards scrollable (horizontally and vertically) if overflown
// TODO: or just make text and math fields schrollable

// TODO: cutomise error Error in App.js, e.g. throw new ValuesConflictError("...")
// throw new Error("display.mainCard and display.cardForm can't be both true")
// TODO: Should <Navbar /> be used or should the component Navbar.js be removed completely from the project
// TODO: Add possibility for an inline mathfield, it should be inserted into the innerHtml of the textQuill. (math field can be part of text field). A pull request can be made to React-Quill or to Quill-JS to add this feature. an npm package can also be built to provide this feature of a hybrid quill.
// TODO: Allow user to share cards on social media (twitter, instagram, etc.) show a share icon (or social media apps icons). when a card is shared, a fancy version of the card should be generated.
// TODO: tool bar of the quill should be a bit darker.
// TODO: tool bar of the quill should be hidden when the quill is not active/focused. 
// TODO: the reducer pattern (useReducer, reducerFunc with snippets, ACTIONS(change name and capitalize automatically in snippet)) which I used for "fields" in CardForm.js and for "cards" in App.js should be made into a snippet (either inline -addapted to be used inside of a component, or a whole  component snippet, in this case, a component is used to for just one state array(cards, fields, etc.)
// TODO: move this reducer pattern from App.js into a separate file to make App.js cleaner.
// TODO: move this reducer pattern from NewCard.js into a separate file to make NewCard.js cleaner. 
// TODO: style used in quills in github (for issues) looks nicer, style the quill in a way similar to that.
// TODO: quill resizable ??? would it be a good idea ? if so, the default size should be nice.
// TODO: make a snippet for the way I use context as in ThemeContext.js
// TODO: my custom snippets should be backed up along with my dot files (.vimrc, .tmux.conf .ideavimrc etc.)
// TODO: see what other pattern that I am using which can be made into snippets
// TODO: convert this app into a desktop app using Electron.js
// TODO: Theme can be retrieved from the system theme.
// TODO: <section> was not used at all, google where it should be used.
// TODO: leverage all the tools inside browsers' devtools and extension to make the site better.
// TODO: Should fields have Label?, if yes make them into placeholder, when field focused, they go outside the field (as in material ui)
// TODO: Show a preview of the card next to the fieldset.
// TODO: make the math quill work in a similar way to the quill in Desmos ("int" instead of "\int", "sqrt", "\sqrt", ...)


// TODO: Make the CARDS and CARDS_LIST(cards container) easily reusable in other apps and by other users, i.e. make them loosely coupled to this app
// TODO: loosely coupled card jsx <Card size="small/sm or  medium/md or large/lg" flippable=true ... />
// TODO: loosely coupled cards_list jsx <CardsList theme="dark light /* add other possible themes */"  flippable=true ... />
// TODO: loosely coupled cards_list jsx <CardsList theme="dark light /* add other possible themes */" .../>
// TODO: all corners should have the same level of roundness, there should be considerable disparity between corners' roundness.
// TODO: use SCSS, and leverage all of its capabilities.
// TODO: add optional -t -s -d (for typescript, scss and dark-theme (dark background, lightgray text color) respectively) flags to webfly fish function.
// TODO: There are certainly cases in the app where the css unit "em" would be better than "rem", find them and change the unit accordingly.
// TODO: try to fit the math formula in its container by reducing the font-size a little bit before adding a scroll bar (horizontal).
// TODO: in Card.js when having many fields, when the card gets overflown, the fields (math and text) should be at their max hight, implement that in javascript. The reason it should be fixed is that all field get very small even if they contain many lines. 
// TODO: in mathfield(display, not input), pressing enter should not jump to
// TODO: a theme prop for Card.js can be specified, e.g. <Card theme="snow" />
// TODO: right clicking on a card should display the menu that is shown when right clicking on the caret.
// TODO: if cards are a fixed size, the font-size for cards with little content can be increased.
// TODO: remove css and style properties from components, put them in css files( many files - modularity ), and put only class names in components (add if conditions should be about whether to add a class name to className prop or not). 
// TODO: remove cursor when hovering over math formula.
// TODO: when showing a main card in center of screen, if a user presses left/right arrows, the next/previous card slides in and previous/next card slides out (in the direction of the arrows.), (h/l - vim keybindings do the same action).
// TODO: remove "black", "white" and change them with convenient shades (after moving them from components to css files.)
// TODO: if inside maincard state, pressing esc or q should quit that mode back to cards-display mode.
// TODO: github.com has a cool dark them !!
// TODO: remove all console.log in the code.
// TODO: card form front used to slide down from above, and now it doesn't because of <Autocomplete> component that I used. FIX THAT and make card form from slide from above when the button (+ add card) is clicked.
// TODO: add card skeleton before cards are loaded (server calls.)
// TODO: add a "slide down from above" animation to CardForm's Header, and a "slide up from under screen" animation to CardForm's Footer(stepper).
// TODO: when a user reaches the other info section. use NLP techniques to suggest tags to him, these tags should already be there when he reaches the OtherInfo section.
// TODO: All functionalities in the app should be accessible using the keybaord. add a cool :focus effect on cards(this :focus effect shows which card is selected).
// TODO: User must be able to sign in with their facebook accounts.
// TODO: Either use PropTypes or switch all the code to typescript.
// TODO: when a user is writing some formula. pressing enter should insert a new MathField(mathquill) below and focus it ( as in desmos ).
// TODO: find how to use (listen) to <esc> (escape) keyboard press, 




// there are concepts that require more than two faces(front and back) to be shown in a way that users can benefit from the most. 
// that's why the app should introduce the concept of multiple cards in one card.
// possible names: deck, pack, pcards.
// right click on pack: distribute the cards over the empty space in the user's screen.
// right click on lone card(not pack) put it back in the pack.



	   /--------------------------
	  /--------------------------|
	 /--------------------------||
         |                         |||
         |                         |||
         |                         |||
         |                         |||
         |                         |||
         |                         |||
         |                         |||
         |                     1/5 ||/
         ---------------------------/








// TODO: add a scratchpad functionality. some users might want to guess the solution in the back of the card before flipping it. so they write some formula(or anything)in the scratch pad, flip the card and check if they got they right solution.

